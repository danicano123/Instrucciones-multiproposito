TOUCH: crea un archivo

FILE: me describe a detalle el tipo de archivo

PWD: indica la ruta actual

LS: me muestra el contenido de la carpeta seleccionada
	[
	ls nombreCarpeta (Muestra contenido de la carpeta elegida)
	ls (me muestra el contenido de la carpeta actual)
	ls -l (lectura, me muestra a detalle el contenido de la carpeta)
	ls -lh (muestra el contenido detallado de una manera mas entendible aunque es casi lo mismo)
	ls -a (muestra los archivos ocultos)

	]

CP: copy, sirve para copiar un archivo 
	[
	 cd nombreArchivo nuevoNombre 
	]

MV: move, sirve para mover un archuvo o carpeta de un lugar a otro 

RM: remove, sirve para eliminar carpetas o archivos. La recomendacion 
	[
	 rm nombreArchivo 
	 rm -i nombreArchivo (interactive, me permite ir uno por uno de los archivos hijos mirando cual quiero o  no borrar) 
	 rm -r nombreCarpeta (permite borrar carpetas)
	rm -f (borrar a la fuerza) 
	]

HEAD: me muestra las primeras 10 lineas de un archivo
	[
	head nombreArchivo -n numeroDeLineasDeseadas (ya no muestra las primeras diez sino cuantas yo quiera)
	]

TAIL: me muestra las ultimas 10 lineas de un archivo
	[
	tail nombreArchivo -n numeroDeLineasDeseadas (ya no muestra las ultimas diez sino cuantas yo quiera)
	]

LESS: me muestra todo el contenido de un archivo
	[
	al usarlo se abre como otra ventana y dentro de ella podemos hacer busquedas de palabras usamos " / " y luego la palabra a filtrar, tambien puedes guardar esa impresion en un archivo
	Si dentro de les oprimes " V " puedes acceder a " vim " que es un editor de texto dentro del terminal	
		VIM: editor de texto
		[
		:q ( salir )
		i ( insertar texto )
		ESC ( salgo del modo insert )
		/ ( busca una coincidencia con la palabra que pongamos )
		dd ( borro linea  )
		:w ( guardar )
		]
	]

CAT me concatena 2 archivos  y los muestra su contenido	
	[
	cat archivo1 archivo2
	]

ECHO: me muestra en consola lo que yo ponga 
	[
	echo "hello World!"
	]

XDG-OPEN: me abre un archivo con mi editor de texto por defecto

ALIAS: Me permite crear una consulta o una instruccion personalizada de manera temporal (hasta que se cierre el shell) 
	[
	alias nombreCualquiera="instruccionNativa"	
	]


WILCARDS: Son filtros personalizados para no tener que buscar uno por uno los archivos
	TODAS COMIENZAN CON " LS " YA QUE VAMOS A LISTAR LOS RESULTADOS PERO SI QUEREMOS LO PODEMOS USAR CON " MV " " CP " " RM "
 	[
	*texto : me muestra todo lo que cuyo nombre termine con eso que escribí
	texto* : me muestra todo lo que cuyo nombre comience con eso que escribí
	texto? : me muestra todo cuyo nombre sea ese texto mas un caracter o si queremos mas caracteres ponemos mas signos de interrogacion
	[[:upper:]]* : que comience con mayuscula y siga lo que sea
	[abc] : que comience por cualquier caracter que yo ponga dentro de los corchetes
	]

REDIRECCIONES : son maneras de redireccionar la informacion que recibimos o enviamos ya sea para guardarla en un archivo o solo verla por medio de una impresion como " ECHO "
	[
	ESTANDAR OUTPUT ( su connotacion numerica es 1 , osea lo que se imprime por defecto si la consulta sale bien )
		ls archivo1 > archivoReceptor ( Aqui lo que estoy diciendo es, muestreme el contenido de archivo1 y lo que imprima, redireccionelo y guardelo en archivoReceptor OJO, esto crea el archivoReceptor o si ya existe, lo 			reescribe )
		ls archivo1 >> archivoReceptor ( Lo mismo que el de arriba pero este no sobreescribe sino que suma esta nueva info a la ya que había )
	ESTANDAR ERROR (su connotacion es el 2 y se refiere a cuando hay un error en la consulta)
		ls archivoInexistente > archivoReceptor (esto no guardará nada pues es un error)
		ls archivoInexistente 2> archivoReceptor (esto guarda EL ERROR que sale ya que pusimos la connotacion 2)
	ls archivoInexistente > archivoReceptor  2>&1 (ahi le estoy diciendo que lo redirija pase lo que pase)
	ESTANDAR INPUT (su connotacion es 0 y se refiere a el dato de entrada)
		para este se utiliza " < " aun no se algun caso de uso
	]

PIPE OPERATORS ( Me convierten un output en un input,  osea que si por ejemplo realizo una consulta, puedo hacer que ese resultado sea el innput de otro operador como un " LESS " ) 
	[
	ls -lh |  less (le estoy diciendo que me liste un contenido, me muestre sus datos completos y el resultado lo muestre como una impresion " LESS " y nos evitamos el tener que guardarlo)
	ls -lh |  less | tee archivoReceptor.txt ( Eso si me crea un archivo pero el punto es entender que " | " hace que el output anterior a el se convierta en el input de la siguiente instruccion )
	]

OPERADORES DE CONTROL
	[
	Si queremos que se ejecute una accion al terminar otra, pero sin importar si la operacion anterior salió bien o mal, usamos " ; " luego de un comando, no tiene limite en su uso
	Si usamos " & " luego de un comando, se ejecutan en simultaneo sin importar nada
	Si usamos " && " el segundo comando se ejecuta si solo si el primero es exitoso
	Si usamos " || " recorre en orden buscando cual se ejecuta primero correctamente, solo ejecuta el primer caso de exito
	[

MANEJO DE PERMISOS
se muestran con el ls -l ya que esto amplia la informacion del archivo mostrando sus permisos
	TIPOS DE ARCHIVO
	- -> un archivo normal
	d -> un directorio
	l -> un link
	b -> Son archivos que manejan la información de los bloques de datos como una 	    USB

	TIPOS DE MODO
	pueden tener 3 tipos de permisos " r " read  001, " w " write 010, " x " execute 100, representados en sistema octal pero en codigo binario 
		DUEÑO
		es quien crea el archivo 111 ( rwx )

		GRUPO
		archivo compartido 101 ( rx )

		WORLD
		cualquier otro que no entre en " DUEÑO " o " GRUPO " 101 ( rx )

	EJEMPLO
	se muestra la siguiente linea drwxr-xr-x donde el primer caracter indica el tipo (D) y cada 3 caracteres representa los permisos de --- dueño --- grupo --- mundo siendo las letras la representacion del permido en orden 
	rwx y el espacio que contenga una ( - ) hace referencia a que no tiene el permiso

	Diferencia de permisos entre archivos y directorios
Permiso	Archivo			Directorio
r 	Permite abrir y leer un
	archivo.
				Permite listar el contenido de
				un directorio solo si el
				permiso de ejecución (x)
				también está activo.
w	Permite escribir en un
	archivo; sin embargo, este
	atributo no permite cambiar el
	nombre de los archivos o
	eliminarlos. La capacidad de
	eliminar o cambiar el nombre
	de los archivos está
	determinado por los atributos
	del directorio.
				Permite que los archivos
				dentro de un directorio sean
				creados, eliminados y
				renombrados si también se
				establece el atributo de
				ejecución.
x	Permite que un archivo sea
	tratado como un programa y
	pueda ser ejecutado.
				Permite entrar al directorio.
	
	PONER O QUITAR PERMISOS
	[
	chmod 755 nombreArchivo ( le estoy diciendo en modo octal que el " U " va a tener rwx, " G " rx y " O " rx )
	chmod u-r nombreArchivo ( le quito solo al Usuario el permiso " R " funciona como cualquier otro personaje o permido  y para poner solo pongo un + en vez de menos ) 
	]


PROCESOS 
	[
	ps ( muestra los procesos actuales )
	kill numeroPID ( termina el preceso seleccionado )
	top ( nos muestra todos los procesos, cual está usando mas recursos y un monton de info mas y con " H " podemos ver un mini manual de lo que podemos hacer dentro de este menú)
	CTRL + Z me manda un proceso a background ( lo deja en espera )
	jobs ( me muestra los procesos en background )
	fg numeroDeTrabajo ( me permite reanudar una tarea en background )
	
	]



	
	